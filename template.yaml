AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: slackbot-wordle

Parameters:
  StageName:
    Type: String
    Default: prod
  FunctionName:
    Type: String
    Default: slackbot-wordle

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  SlackbotApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      BinaryMediaTypes:
        - image~1png
      AccessLogSetting:
        DestinationArn: !GetAtt SlackbotLogGroup.Arn
        Format: >-
          '{"requestTime":"$context.requestTime",
          "requestId":"$context.requestId",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "resourcePath":"$context.resourcePath",
          "status":$context.status,
          "responseLatency":$context.responseLatency,
          "xrayTraceId":"$context.xrayTraceId",
          "integrationRequestId":"$context.integration.requestId",
          "functionResponseStatus":"$context.integration.status",
          "integrationLatency":"$context.integration.latency",
          "integrationServiceStatus":"$context.integration.integrationStatus",
          "ip":"$context.identity.sourceIp",
          "userAgent":"$context.identity.userAgent"}'

  SlackbotLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${FunctionName}-${StageName}

  SlackEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: python3.9
      FunctionName: !Sub ${FunctionName}-${StageName}
      Environment:
        Variables:
          DYNAMODB_ENDPOINT_URL: !Sub https://dynamodb.${AWS::Region}.amazonaws.com
          DYNAMODB_GAME_TABLE: !Ref WordleGameStore
          LOG_LEVEL: INFO
          SLACK_SIGNING_SECRET: '{{resolve:secretsmanager:slackbot-wordle:SecretString:signing}}'
          SLACK_BOT_TOKEN: '{{resolve:secretsmanager:slackbot-wordle:SecretString:token}}'
      Events:
        SlackEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref SlackbotApi
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
              - lambda:GetFunction
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FunctionName}-${StageName}
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
            Resource: !GetAtt WordleGameStore.Arn

  ImageGenerateLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${FunctionName}-wkhtmltox
      Description: wkhtmltopdf Lambda Layer
      ContentUri: layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  ImageGenerateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: image.generate
      Runtime: python3.9
      MemorySize: 512
      FunctionName: !Sub ${FunctionName}-image-${StageName}
      Layers:
        - !Ref ImageGenerateLayer
      Environment:
        Variables:
          FONTCONFIG_PATH: /opt/fonts
      Events:
        SlackEvent:
          Type: Api
          Properties:
            Path: /image
            Method: get
            RestApiId: !Ref SlackbotApi

  WordleGameStore:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${FunctionName}-${StageName}
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  # ServerlessHttpApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SlackEvent:
    Description: API Gateway endpoint URL for Prod state
    Value: !Sub https://${SlackbotApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${StageName}
